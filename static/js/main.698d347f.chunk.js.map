{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SORT_FILED_ALPHABET","SORT_FILED_LENGTH","isLightStyle","sortField","sortFieldType","App","useState","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPrepareGoods","className","type","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"uOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,EAAsB,sBACtBC,EAAoB,iBA4B1B,IAAMC,EAAgC,SAACC,EAAWC,GAChD,OAAOD,IAAcC,EAAgB,GAAK,YAG/BC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBI,EAAlB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAWMC,EA3CR,SACEC,EADF,GAGG,IADCR,EACF,EADEA,UAAWK,EACb,EADaA,WAETI,EAAa,YAAOD,GAmBxB,OAjBIR,GACFS,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQZ,GACN,KAAKH,EACH,OAAOc,EAAME,cAAcD,GAC7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,IACFI,EAAgBA,EAAcM,WAGzBN,EAoBcO,CACnBpB,EACA,CAAEI,YAAWK,eAGf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,iEAGLlB,EAAaC,EAAWH,GAHnB,gBAKTsB,QAAS,kBAAMf,EAAaP,IAP9B,iCAYA,wBACEqB,KAAK,SACLD,UAAS,oEAGLlB,EAAaC,EAAWF,GAHnB,gBAKTqB,QAAS,kBAAMf,EAAaN,IAP9B,4BAYA,wBACEoB,KAAK,SACLD,UAAS,oEAGLZ,EAAa,GAAK,WAHb,gBAKTc,QAhDc,WACpBb,GAAc,SAAAc,GAAI,OAAKA,MAwCnB,sBAYEpB,GAAaK,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVE,QArDkB,WAC1Bf,EAAa,IACbE,GAAc,IAgDR,sBAUJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC7HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.698d347f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface FilterParams {\n  sortField: string;\n  isReversed: boolean;\n}\n\ntype IsLightFunction = (a: string, b: string) => string;\n\nconst SORT_FILED_ALPHABET = 'Sort alphabetically';\nconst SORT_FILED_LENGTH = 'Sort by length';\n\nfunction getPrepareGoods(\n  goods: string[],\n  { sortField, isReversed }: FilterParams,\n) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FILED_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FILED_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nconst isLightStyle: IsLightFunction = (sortField, sortFieldType) => {\n  return sortField === sortFieldType ? '' : 'is-light';\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const toggleReverse = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  const resetSortAndReverse = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getPrepareGoods(\n    goodsFromServer,\n    { sortField, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`\n            button\n            is-info\n            ${isLightStyle(sortField, SORT_FILED_ALPHABET)}\n          `}\n          onClick={() => setSortField(SORT_FILED_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`\n            button\n            is-success\n            ${isLightStyle(sortField, SORT_FILED_LENGTH)}\n          `}\n          onClick={() => setSortField(SORT_FILED_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`\n            button\n            is-warning\n            ${isReversed ? '' : 'is-light'}\n          `}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSortAndReverse}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}